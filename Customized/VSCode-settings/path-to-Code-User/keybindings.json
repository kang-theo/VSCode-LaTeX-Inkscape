// Place your key bindings in this file to override the defaultsauto[]
[
    //b. sleepymalc/VSCode-LaTeX-Inkscape: use vscode + latex + inkscape on macOS to take notes
        //https://www.pbb.wtf/posts/LaTeX-Inkscape
        //https://github.com/sleepymalc/VSCode-LaTeX-Inkscape/blob/main/README.md
        //https://github.com/gillescastel/inkscape-figures
        //https: //github.com/gillescastel/inkscape-shortcut-manager
        //https://github.com/gillescastel/lecture-notes

    // Sympy setup (kcy: not installed)
    // {
    //     "key": "shift+e",
    //     "command": "latex-sympy-calculator.equal",
    //     "when": "editorHasSelection && editorTextFocus && resourceLangId == 'latex' || editorHasSelection && editorTextFocus && resourceLangId == 'markdown'"
    // },
    // {
    //     "key": "shift+alt+cmd+e",
    //     "command": "-latex-sympy-calculator.equal",
    //     "when": "editorHasSelection && editorTextFocus && resourceLangId == 'latex' || editorHasSelection && editorTextFocus && resourceLangId == 'markdown'"
    // },
    // {
    //     "key": "shift+r",
    //     "command": "latex-sympy-calculator.replace",
    //     "when": "editorHasSelection && editorTextFocus && resourceLangId == 'latex' || editorHasSelection && editorTextFocus && resourceLangId == 'markdown'"
    // },
    // {
    //     "key": "shift+alt+cmd+r",
    //     "command": "-latex-sympy-calculator.replace",
    //     "when": "editorHasSelection && editorTextFocus && resourceLangId == 'latex' || editorHasSelection && editorTextFocus && resourceLangId == 'markdown'"
    // },
    // Auto Correction setup (kcy: not installed)
    // {
    //     "key": "cmd+l",
    //     "command": "extension.multiCommand.execute",
    //     "args": {
    //         "sequence": [
    //             "cSpell.goToPreviousSpellingIssue",
    //             {
    //                 "command": "editor.action.codeAction",
    //                 "args": {
    //                     "kind": "quickfix",
    //                     "apply": "first"
    //                 }
    //             },
    //             "cursorUndo",
    //         ]
    //     }
    // },
    // {
    //     "key": "cmd+k",
    //     "command": "extension.multiCommand.execute",
    //     "args": {
    //         "sequence": [
    //             "editor.action.marker.prev",
    //             {
    //                 "command": "editor.action.codeAction",
    //                 "args": {
    //                     "kind": "quickfix",
    //                     "apply": "first"
    //                 }
    //             },
    //             "cursorUndo",
    //         ]
    //     }
    // },

    //-------------------------------------------------------------------------------------------------------------
    // Inkscape setup
        // Usage:
        // 1. Specify a note project folder, modify the project path to the note folder in setting.json. It must have a folder called "Figures". Keys in steps below will be triggered when the cursor is in a tex file.
        // 2. "ctrl+i w": Trigger "inkscape-figures watch" (fswatch is actually used) to watch the note project folder, in case that .svg is generated without .pdf and .pdf_tex. This will monitor the folder and generate them.
        // 3. "ctrl+i c": Automatically create inkscape document and insert the figures in a note tex file.
        //                It does:
        //                      1) Copy the content under cursor (normally the figure name) into your clipboard 
        //                      2) Delete that copied content and insert a snippet defined in latex.json (defined in vscode->user.snippets->latex.code-snippets). 
        //                      3) Lastly, send a command in a terminal by command runner, with the command "inkscapeCreate" (defined in vscode setting.json). This command will open a new document with name specified in 1) and insert snippet for figures in the tex file.
        //                      4) Draw pictures in inkscape and save the project (command+s), and rename the caption in the note tex file.
        //                      5) Rebuild tex and check the pdf updated to see the effect.
        // 4. "ctrl+i e": Open the figures (with ''choose'') again to modified them as needed later, corresponding to "inkscapeEdit".
        // 5. "ctrl+i s": Stop the "inkscape-figures watch".

    {
        // "key": "ctrl+f",
        "key": "ctrl+i c",
        //command run + multi-command
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "editor.action.clipboardCopyAction",
                "editor.action.insertLineAfter",
                "cursorUp",
                "editor.action.deleteLines",
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "name": "incfig"
                    }
                },
                {
                    "command": "command-runner.run",
                    "args": {
                        "command": "inkscapeCreate"
                    },
                    "terminal": {
                        "name": "runCommand",
                        "shellArgs": [],
                        "autoClear": true,
                        "autoFocus": false
                    }
                },
            ]
        },
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode == 'Insert'"
    },
    {
        // "key": "ctrl+f",
        "key": "ctrl+i e",  // inkscape edit
        "command": "command-runner.run",
        "args": {
            "command": "inkscapeEdit",
            "terminal": {
                "name": "runCommand",
                "shellArgs": [],
                "autoClear": true,
                "autoFocus": false
            }
        },
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        // "key": "ctrl+f", // avoid ctrl+f conflict with that in vim mode
        "key": "ctrl+i w",  // inkscape starts watch
        "command": "command-runner.run",
        "args": {
            "command": "inkscapeStart",
            "terminal": {
                "name": "runCommand",
                "shellArgs": [],
                "autoClear": true,
                "autoFocus": false
            }
        },
        // "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode == 'Visual'"
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+i s",  // inkscape stop watch
        //command run + multi-command
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                {
                    "command": "command-runner.run",
                    "args": {
                        "command": "inkscapeStopFswatch"
                    },
                    "terminal": {
                        "name": "runCommand",
                        "shellArgs": [],
                        "autoClear": true,
                        "autoFocus": false
                    }
                },
                {
                    "command": "command-runner.run",
                    "args": {
                        "command": "inkscapeStopInkscape_figures_watch"
                    },
                    "terminal": {
                        "name": "runCommand",
                        "shellArgs": [],
                        "autoClear": true,
                        "autoFocus": false
                    }
                }
            ]
        },
        "when": "editorTextFocus"
    },
    {
        // "key": "ctrl+c",
        "key": "ctrl+i q",  
        "command": "command-runner.run",
        "args": {
            "command": "quiver",
            "terminal": {
                "name": "runCommand",
                "shellArgs": [],
                "autoClear": true,
                "autoFocus": false
            }
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+i d",  
        "command": "command-runner.run",
        "args": {
            "command": "excalidraw",
            "terminal": {
                "name": "runCommand",
                "shellArgs": [],
                "autoClear": true,
                "autoFocus": false
            }
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+i m",
        //command run + multi-command
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "editor.action.clipboardCopyAction",
                "editor.action.insertLineAfter",
                "cursorUp",
                "editor.action.deleteLines",
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "name": "incfigExcelTable"
                    }
                },
                {
                    "command": "command-runner.run",
                    "args": {
                        "command": "excel",
                    },
                    "terminal": {
                        "name": "runCommand",
                        "shellArgs": [],
                        "autoClear": true,
                        "autoFocus": false
                    }
                },
            ]
        },
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode == 'Insert'"
    },
    //e. sleepymalc/VSCode-LaTeX-Inkscape: use vscode + latex + inkscape on macOS to take notes
]